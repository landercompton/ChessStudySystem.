// <auto-generated />
using System;
using ChessStudySystem.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChessStudySystem.Web.Migrations.LichessDb
{
    [DbContext(typeof(LichessDbContext))]
    [Migration("20250801220513_pgncol")]
    partial class pgncol
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("ChessStudySystem.Web.Models.Lichess.ImportSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Errors")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FiltersUsed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GamesErrored")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamesImported")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamesProcessed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamesSkipped")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalGamesFound")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StartedAt");

                    b.HasIndex("Status");

                    b.HasIndex("Username");

                    b.ToTable("ImportSessions");
                });

            modelBuilder.Entity("ChessStudySystem.Web.Models.Lichess.LichessGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Analysis")
                        .HasColumnType("TEXT");

                    b.Property<int?>("BlackRating")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BlackRatingDiff")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BlackTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlackUsername")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasAnalysis")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImportSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ImportedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Increment")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InitialTime")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastMoveAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("LichessId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Moves")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovesCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OpeningEco")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("OpeningName")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("OpeningPly")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OpponentRating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OpponentTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("OpponentUsername")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PerfType")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Pgn")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Rated")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Speed")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Termination")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeControl")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TotalTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserColor")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserRating")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserRatingDiff")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserResult")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Variant")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int?>("WhiteRating")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WhiteRatingDiff")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WhiteTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("WhiteUsername")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Winner")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("ImportSessionId");

                    b.HasIndex("LichessId")
                        .IsUnique();

                    b.HasIndex("OpeningEco");

                    b.HasIndex("OpponentUsername");

                    b.HasIndex("PerfType");

                    b.HasIndex("UserResult");

                    b.HasIndex("Username");

                    b.HasIndex("OpeningEco", "UserResult");

                    b.HasIndex("Username", "CreatedAt");

                    b.HasIndex("Username", "PerfType");

                    b.HasIndex("Username", "UserColor");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ChessStudySystem.Web.Models.Lichess.LichessUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Draws")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FollowersCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FollowingCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPatron")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("JoinedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastSeenAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<int>("Losses")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Performances")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RatedGames")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalGames")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Wins")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChessStudySystem.Web.Models.Lichess.LichessGame", b =>
                {
                    b.HasOne("ChessStudySystem.Web.Models.Lichess.ImportSession", "ImportSession")
                        .WithMany("Games")
                        .HasForeignKey("ImportSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportSession");
                });

            modelBuilder.Entity("ChessStudySystem.Web.Models.Lichess.ImportSession", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
