@model List<ChessStudySystem.Web.Models.Opening>
@{
    ViewData["Title"] = "Chess Openings Database";
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h2 class="mb-0">
                        <i class="fas fa-chess me-2"></i>Chess Openings Database
                    </h2>
                    <div class="d-flex gap-2">
                        <a asp-action="ImportEco" class="btn btn-primary">
                            <i class="fas fa-upload me-1"></i>Import More
                        </a>
                        <button class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#searchModal">
                            <i class="fas fa-search me-1"></i>Search
                        </button>
                    </div>
                </div>

                <div class="card-body">
                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>ECO</th>
                                        <th>Opening Name</th>
                                        <th>Moves</th>
                                        <th>Source</th>
                                        <th>SCID</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var opening in Model)
                                    {
                                        <tr>
                                            <td>
                                                <span class="badge bg-primary">@opening.Eco</span>
                                            </td>
                                            <td>
                                                <strong>@opening.Name</strong>
                                                @if (opening.Aliases?.Any() == true)
                                                {
                                                    <br />
                                                    <small class="text-muted">
                                                        Aliases: @string.Join(", ", opening.Aliases.Values.Take(2))
                                                        @if (opening.Aliases.Count > 2)
                                                        {
                                                            <span>... (+@(opening.Aliases.Count - 2) more)</span>
                                                        }
                                                    </small>
                                                }
                                            </td>
                                            <td>
                                                <code class="text-primary">@opening.Moves</code>
                                            </td>
                                            <td>
                                                <span class="badge bg-secondary">@opening.Src</span>
                                            </td>
                                            <td>@opening.Scid</td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-info"
                                                        onclick="viewDetails(@opening.Id)"
                                                        title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-success"
                                                        onclick="loadPosition('@opening.Fen')"
                                                        title="Load Position">
                                                    <i class="fas fa-chess-board"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (ViewBag.TotalPages > 1)
                        {
                            <nav aria-label="Openings pagination">
                                <ul class="pagination justify-content-center">
                                    <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                                        <a class="page-link" asp-action="ViewOpenings" asp-route-page="@(ViewBag.CurrentPage - 1)">Previous</a>
                                    </li>

                                    @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                            <a class="page-link" asp-action="ViewOpenings" asp-route-page="@i">@i</a>
                                        </li>
                                    }

                                    <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                                        <a class="page-link" asp-action="ViewOpenings" asp-route-page="@(ViewBag.CurrentPage + 1)">Next</a>
                                    </li>
                                </ul>
                            </nav>

                            <div class="text-center text-muted">
                                Showing @((ViewBag.CurrentPage - 1) * ViewBag.PageSize + 1) to
                                @(Math.Min(ViewBag.CurrentPage * ViewBag.PageSize, ViewBag.TotalCount))
                                of @ViewBag.TotalCount openings
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-chess-board fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">No openings found</h4>
                            <p class="text-muted">Import your first opening database to get started.</p>
                            <a asp-action="ImportEco" class="btn btn-primary">
                                <i class="fas fa-upload me-1"></i>Import Openings
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search Modal -->
<div class="modal fade" id="searchModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Search Openings</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <input type="text" id="searchInput" class="form-control"
                           placeholder="Search by opening name or ECO code..." />
                </div>
                <div id="searchResults"></div>
            </div>
        </div>
    </div>
</div>

<!-- Opening Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Opening Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="openingDetails"></div>
            </div>
        </div>
    </div>
</div>

<script>
    // Search functionality
    let searchTimeout;
    document.getElementById('searchInput').addEventListener('input', function() {
        clearTimeout(searchTimeout);
        const query = this.value.trim();

        if (query.length < 2) {
            document.getElementById('searchResults').innerHTML = '';
            return;
        }

        searchTimeout = setTimeout(() => {
            fetch(`/Chess/SearchOpenings?searchTerm=${encodeURIComponent(query)}`)
                .then(response => response.json())
                .then(data => {
                    displaySearchResults(data);
                })
                .catch(error => {
                    console.error('Search error:', error);
                    document.getElementById('searchResults').innerHTML =
                        '<div class="alert alert-danger">Search failed. Please try again.</div>';
                });
        }, 300);
    });

    function displaySearchResults(results) {
        const container = document.getElementById('searchResults');

        if (results.length === 0) {
            container.innerHTML = '<div class="text-muted">No openings found.</div>';
            return;
        }

        let html = '<div class="list-group">';
        results.forEach(opening => {
            html += `
                <div class="list-group-item list-group-item-action">
                    <div class="d-flex w-100 justify-content-between">
                        <h6 class="mb-1">${opening.name}</h6>
                        <span class="badge bg-primary">${opening.eco}</span>
                    </div>
                    <p class="mb-1"><code>${opening.moves}</code></p>
                    <div class="d-flex gap-2">
                        <button class="btn btn-sm btn-outline-info" onclick="viewDetails(${opening.id})">
                            <i class="fas fa-eye"></i> Details
                        </button>
                        <button class="btn btn-sm btn-outline-success" onclick="loadPosition('${opening.fen}')">
                            <i class="fas fa-chess-board"></i> Load Position
                        </button>
                    </div>
                </div>
            `;
        });
        html += '</div>';

        container.innerHTML = html;
    }

    function viewDetails(openingId) {
        fetch(`/Chess/GetOpeningDetails/${openingId}`)
            .then(response => response.json())
            .then(opening => {
                let html = `
                    <div class="row">
                        <div class="col-md-6">
                            <h6>Basic Information</h6>
                            <table class="table table-sm">
                                <tr><td><strong>Name:</strong></td><td>${opening.name}</td></tr>
                                <tr><td><strong>ECO:</strong></td><td><span class="badge bg-primary">${opening.eco}</span></td></tr>
                                <tr><td><strong>Source:</strong></td><td>${opening.src}</td></tr>
                                <tr><td><strong>SCID:</strong></td><td>${opening.scid || 'N/A'}</td></tr>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <h6>Moves</h6>
                            <code class="d-block bg-light p-2 rounded">${opening.moves}</code>

                            <h6 class="mt-3">FEN Position</h6>
                            <code class="d-block bg-light p-2 rounded small">${opening.fen}</code>
                        </div>
                    </div>
                `;

                if (opening.aliases && Object.keys(opening.aliases).length > 0) {
                    html += `
                        <div class="mt-3">
                            <h6>Aliases</h6>
                            <div class="row">
                    `;
                    for (const [source, alias] of Object.entries(opening.aliases)) {
                        html += `
                            <div class="col-md-6 mb-2">
                                <strong>${source}:</strong> ${alias}
                            </div>
                        `;
                    }
                    html += `</div></div>`;
                }

                document.getElementById('openingDetails').innerHTML = html;
                new bootstrap.Modal(document.getElementById('detailsModal')).show();
            })
            .catch(error => {
                console.error('Error loading opening details:', error);
                document.getElementById('openingDetails').innerHTML =
                    '<div class="alert alert-danger">Failed to load opening details.</div>';
                new bootstrap.Modal(document.getElementById('detailsModal')).show();
            });
    }

    function loadPosition(fen) {
        // Copy FEN to clipboard
        navigator.clipboard.writeText(fen).then(() => {
            alert('FEN position copied to clipboard!\n\n' + fen);
        }).catch(() => {
            alert('FEN Position:\n' + fen);
        });
    }
</script>